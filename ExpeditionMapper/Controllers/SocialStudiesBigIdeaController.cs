using System.Data.Entity;
using System.Linq;
using System.Web.Mvc;
using ExpeditionMapper.Models.Domain;
using ExpeditionMapper.DAL;
using ExpeditionMapper.Models.ViewModels;
using Kendo.Mvc.Extensions;
using Kendo.Mvc.UI;

namespace ExpeditionMapper.Controllers
{
    public class SocialStudiesBigIdeaController : BaseController
    {
        private ExpeditionContext db = new ExpeditionContext();

        public ActionResult SocialStudiesBigIdea_Read(int expeditionId, [DataSourceRequest] DataSourceRequest request)
        {
            IQueryable<SocialStudiesBigIdea> socialStudiesBigIdeas = db.SocialStudiesBigIdeas.Where(b => b.ExpeditionId == expeditionId);
            return Json(socialStudiesBigIdeas.ToDataSourceResult(request));
        }

        [AcceptVerbs(HttpVerbs.Post)]
        public ActionResult SocialStudiesBigIdea_Create(int expeditionId, [DataSourceRequest]DataSourceRequest request, SocialStudiesBigIdeaViewModel socialStudiesBigIdeaBigIdea)
        {
            if (ModelState.IsValid)
            {
                // Create a new Expedition entity and set its properties from the posted FallExpedition Model
                var entity = new SocialStudiesBigIdea
                {
                    Id = socialStudiesBigIdeaBigIdea.Id,
                    Idea = socialStudiesBigIdeaBigIdea.Idea,
                    Rationale = socialStudiesBigIdeaBigIdea.Rationale,
                    ExpeditionId = 1
                };
                // Add the entity
                db.SocialStudiesBigIdeas.Add(entity);
                // Insert the entities in the database
                db.SaveChanges();
                // Get the Id generated by the database
                socialStudiesBigIdeaBigIdea.Id = entity.Id;
            }
            // Return the inserted entities. The grid needs the generated ID. Also return any validation errors.
            return Json(new[] { socialStudiesBigIdeaBigIdea }.ToDataSourceResult(request, ModelState));
        }

        public ActionResult SocialStudiesBigIdea_Update(int expeditionId, [DataSourceRequest]DataSourceRequest request, SocialStudiesBigIdeaViewModel socialStudiesBigIdeaBigIdea)
        {
            if (ModelState.IsValid)
            {
                // Create a new Product entity and set its properties from the posted ExpeditionViewModel
                var entity = new SocialStudiesBigIdea
                {
                    Id = socialStudiesBigIdeaBigIdea.Id,
                    Idea = socialStudiesBigIdeaBigIdea.Idea,
                    Rationale = socialStudiesBigIdeaBigIdea.Rationale,
                    ExpeditionId = 1
                };
                // Attach the entity
                db.SocialStudiesBigIdeas.Attach(entity);
                // Change its state to Modified so Entity Framework can update the existing product instead of creating a new one
                db.Entry(entity).State = EntityState.Modified;
                // Update the entity in the database
                db.SaveChanges();
            }
            // Return the updated entities. Also return any validation errors.
            return Json(new[] { socialStudiesBigIdeaBigIdea }.ToDataSourceResult(request, ModelState));
        }

        public ActionResult SocialStudiesBigIdea_Destroy(int expeditionId, [DataSourceRequest]DataSourceRequest request, SocialStudiesBigIdeaViewModel socialStudiesBigIdea)
        {
            if (ModelState.IsValid)
            {
                // Create a new Product entity and set its properties from the posted ProductViewModel
                var entity = new SocialStudiesBigIdea
                {
                    Id = socialStudiesBigIdea.Id,
                    Idea = socialStudiesBigIdea.Idea,
                    Rationale = socialStudiesBigIdea.Rationale,
                    ExpeditionId = 1
                };
                // Attach the entity
                db.SocialStudiesBigIdeas.Attach(entity);
                // Delete the entity
                db.SocialStudiesBigIdeas.Remove(entity);
                // Delete the entity in the database
                db.SaveChanges();
            }
            // Return the removed product. Also return any validation errors.
            return Json(new[] { socialStudiesBigIdea }.ToDataSourceResult(request, ModelState));
        }
    }
}
